runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
shinyFilesExample()
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
v = 3
rm(v)
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp(list(
ui = bootstrapPage(
selectInput('dataset', 'Choose Dataset', c('mtcars', 'iris')),
selectInput('columns', 'Columns', "")
),
server = function(input, output, session){
outVar = reactive({
mydata = get(input$dataset)
names(mydata)
})
observe({
updateSelectInput(session, "columns",
choices = outVar()
)})
}
))
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
library(shiny); runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_APP/soccer.R')
runApp('Google Drive/01_GitHub/GPS_COOR/SOCCER_EX_APP/soccer_pickfile.R')
library(googlesheets)
suppressMessages(library(dplyr))
(my_sheets <- gs_ls())
my_sheets %>% glimpse()
gs_gap() %>%
gs_copy(to = "House Chores")
gs_ls("House Chores")
gap <- gs_title("House Chores")
f = gap %>% gs_read(ws = "Form Responses 1")
f %>%
select_if(function(x) any(is.na(x))) %>%
summarise_all(funs(sum(is.na(.)))) -> f_NA
select_if(function(f) any(is.na(f)))
arfard(GAP_KEY <- gs_gap_key())
third_party_gap <- GAP_KEY %>%
gs_key()
c
gs_ws_ls(gap)
f = gap %>% gs_read(ws = "Form Responses 1")
f.type
f = gap %>% gs_edit_cells(ws = "Form Responses 1", input = 'Y')
gs_edit_cells(gap, ws = "Form Responses 1", input = "SAdasd", anchor = "D2", byrow = FALSE,
col_names = FALSE, trim = FALSE, verbose = TRUE)
gap
for (i in 3:6) {
foo <- gap %>% gs_edit_cells(ws = "Form Responses 1", input = 'N')
Sys.sleep(0.3)
}
library(googlesheets)
library(googlesheets)
suppressMessages(library(dplyr))
(my_sheets <- gs_ls())
my_sheets
gs_ls("NEW House Chores")
gap <- gs_title("NEW House Chores")
gap
data = gap %>% gs_read(ws = "Form Responses 1")
data = gap %>% gs_read(ws = "Form Responses 1")
data
data%>%group_by('Name')
data%>%group_by('Name')%>%summarise(t_points = sum(Points))
data
data%>%group_by('Name')%>%summarise(t_points = sum(Points))
data%>%group_by(Name)%>%summarise(t_points = sum(Points))
data$TimestampDate,"%m/%d/%Y"
as.Date(data$TimestampDate,"%m/%d/%Y")
as.Date(data$Timestamp,"%m/%d/%Y")
data$Day = as.Date(data$Timestamp,"%m/%d/%Y")
data
my_sheets
my_sheets
my_sheets %>% glimpse()
# Check the list of sheets
my_sheets <- gs_ls()
my_sheets
# Listing the table of interest:
gs_ls("NEW House Chores")
gap <- gs_title("NEW House Chores")
gap
data%>%group_by(Name)%>%summarise(t_points = sum(Points))
library(googlesheets)
suppressMessages(library(dplyr))
# Check the list of sheets
my_sheets <- gs_ls()
# Listing the table of interest:
gs_ls("NEW House Chores")
# Getting the data from the sheet
# reading the file
gap <- gs_title("NEW House Chores")
# Getting the data from the responses
data = gap %>% gs_read(ws = "Form Responses 1")
# generating a date field.
data$Day = as.Date(data$Timestamp,"%m/%d/%Y")
# Adding the total number of point for each child.
data%>%group_by(Name)%>%summarise(t_points = sum(Points))
data
my_sheets <- gs_ls()
# Listing the table of interest:
gs_ls("NEW House Chores")
# Getting the data from the sheet
# reading the file
gap <- gs_title("NEW House Chores")
# Getting the data from the responses
data = gap %>% gs_read(ws = "Form Responses 1")
# generating a date field.
data$Day = as.Date(data$Timestamp,"%m/%d/%Y")
# Adding the total number of point for each child.
data%>%group_by(Name)%>%summarise(t_points = sum(Points))
data
my_sheets <- gs_ls()
# Listing the table of interest:
gs_ls("NEW House Chores")
# Getting the data from the sheet
# reading the file
gap <- gs_title("NEW House Chores")
# Getting the data from the responses
data = gap %>% gs_read(ws = "Form Responses 1")
# generating a date field.
data$Day = as.Date(data$Timestamp,"%m/%d/%Y")
# Adding the total number of point for each child.
data%>%group_by(Name)%>%summarise(t_points = sum(Points))
data
gs_ws_ls(gap)
# Checking the sheets in the spreadsheet
gs_ws_ls(gap)
f = gap %>% gs_read(ws = "Form Responses 1")
f.type
data
library(shiny); runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
library(googlesheets)
suppressMessages(library(dplyr))
# Check the list of sheets
my_sheets <- gs_ls()
# Listing the table of interest:
gs_ls("NEW")
# Getting the data from the sheet
# reading the file
gap <- gs_title("NEW")
# Checking the sheets in the spreadsheet
gs_ws_ls(gap)
# Getting the data from the responses
data = gap %>% gs_read(ws = "Form Responses 1")
total_rows = nrow(data)
total_rows
# generating a date field.
#data$Day = as.Date(data$Timestamp,"%m/%d/%Y")
# NON PAID DATA
ndata = data%>%filter(is.na(paid))
ndata
n_rows = nrow(ndata)
n_rows
if (total_rows == n_rows){n_rows = n_rows-1}
datap = ndata%>%group_by(Name)%>%summarise(t_points = sum(Points))
datap
data
data %>% filter(name)
data %>% filter(Name)
data %>% filter(Name == Eusebio)
data %>% filter(Name == 'Eusebio')
library(ggplot2)
bp = ggplot(eu_data, aes(x="Chores", y='Points', fill=group))+
pie <- bp + coord_polar("y", start=0)
bp = ggplot(eu_data, aes(x="Chores", y='Points', fill=group))+
pie <- bp + coord_polar("y", start=0)
bp = ggplot(eu_data, aes(x="Chores", y='Points', fill=group))
eu_data = data %>% filter(Name == 'Eusebio')
library(ggplot2)
bp = ggplot(eu_data, aes(x="Chores", y='Points', fill=group))
pie <- bp + coord_polar("y", start=0)
pie
bp = ggplot(eu_data, aes(x="Chores", y='Points', fill='Chores'))
pie <- bp + coord_polar("y", start=0)
pie
bp = ggplot(eu_data, aes(x="", y='Points', fill='Chores'))
pie <- bp + coord_polar("y", start=0)
pie
bp= ggplot(eu_data, aes(x="", y='Points', fill='Chores')))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0)
pie
eu_data
eu_data = data %>% filter(Name == 'Eusebio') %>% select_('Chores', 'Points')
eu_data
eu_data = data %>% filter(Name == 'Eusebio') %>% select_('Chores', 'Points')%>%summarise(t_points = sum(Points))
eu_data
eu_data = data %>% filter(Name == 'Eusebio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = sum(Points))
eu_data
bp= ggplot(eu_data, aes(x="", y='Points', fill='Chores')))+
bp= ggplot(eu_data, aes(x="", y='Points', fill='Chores')))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0)
pie
bp= ggplot(eu_data, aes(x="", y='Points', fill='Chores'))+
geom_bar(width = 1, stat = "identity")
bp
eu_data
bp= ggplot(eu_data, aes(x="", y='t_points', fill='Chores'))+
geom_bar(width = 1, stat = "identity")
bp
library(ggplot2)
bp= ggplot(eu_data, aes(x="", y='t_points', fill='Chores'))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0)
pie
eu_data
bp= ggplot(eu_data, aes(x="", y=t_points, fill=Chores))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0)
pie
pie <- bp + coord_polar("y")
pie
pie <- bp + coord_polar("y", start=0)
pie
bp= ggplot(eu_data, aes(x="", y=t_points, fill=Chores))
#+
#  geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0)
pie
bp= ggplot(eu_data, aes(x="", y=t_points, fill=Chores)) + geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
bp
bp= ggplot(eu_data, aes(x="", y=t_points, fill=Chores)) + geom_bar(width = 1, stat = "identity") +
coord_polar(start=0)
bp
bp= ggplot(eu_data, aes(x="", y=t_points, fill=Chores)) + geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
bp
bp= ggplot(eu_data, aes(x="", y=t_points, fill=Chores)) + geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
bp + scale_fill_brewer(palette="Blues")+
theme_minimal()
bp= ggplot(eu_data, aes(x="", y=t_points, fill=Chores)) + geom_bar(width = 1,)+# stat = "identity") +
coord_polar("y", start=0)
bp + scale_fill_brewer(palette="Blues")+
theme_minimal()
bp= ggplot(eu_data, aes(x="", y=t_points, fill=Chores)) + geom_bar(width = 1,)+# stat = "identity") +
coord_polar("y")#, start=0)
bp + scale_fill_brewer(palette="Blues")+
theme_minimal()
bp= ggplot(eu_data, aes(x="", y=t_points, fill=Chores)) + geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
bp + scale_fill_brewer(palette="Blues")+
theme_minimal()
library(scales)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(value/100)), size=5)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = percent(value/100)), size=5)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points/3 + c(0, cumsum(t_points)[-length(t_points)]),
label = percent(t_points/100)), size=5)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points),
label = (t_points
), size=5)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = value/3 + c(0, cumsum(t_points)[-length(t_points)]),
label = percent(t_points/100)), size=4
)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points/3 + c(0, cumsum(t_points)[-length(t_points)]),
label = percent(t_points/100)), size=4
)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points/3 + c(0, cumsum(t_points)[-length(t_points)]),
label = percent(t_points/100)), size=10
)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points/3 + c(0, cumsum(t_points)[-length(t_points)]),
label = percent(t_points/100)), size=5
)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points/3 + c(0, cumsum(t_points)[-length(t_points)]),
label = (t_points/100)), size=5
)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points/3 + c(0, cumsum(t_points)[-length(t_points)]),
label = (t_points)), size=5
)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points + c(0, cumsum(t_points)[-length(t_points)]),
label = (t_points)), size=5
)
/3
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points + c(0, cumsum(t_points)[-length(t_points)]),
label = (t_points)), size=5
)
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points + c(0, cumsum(t_points)),
label = (t_points)), size=5
)
[-length(t_points)]
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points + c(0, cumsum(t_points)[-length(t_points)]),
label = (t_points)), size=5
)
eu_data
bp + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points/ nrow(eu_data) + c(0, cumsum(t_points)[-length(t_points)]),
label = (t_points)), size=5
)
bp + scale_fill_brewer("Blues") + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points/ nrow(eu_data) + c(0, cumsum(t_points)[-length(t_points)]),
label = (t_points)), size=5
)
bp + scale_fill_brewer("Blues") +   blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points/ nrow(eu_data) + c(0, cumsum(t_points)[-length(t_points)]),
label = (t_points)), size=5
)
library(plotrix)
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "An exploded 3D pie chart", explode=0.1, radius=.9, labelcex = 1.2,  start=0.7)
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "An exploded 3D pie chart",
explode=0.1, radius=.9, labelcex = .2,  start=0.7)
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "An exploded 3D pie chart",
explode=0.1, radius=.9, labelcex = 1,  start=0.7)
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "Points per chore",
explode=0.1, radius=.9, labelcex = 1,  start=0.7)
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "Points per chore",
explode=0.1, radius=.9, labelcex = 1,  start=1.7)
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "Points per chore",
explode=0.1, radius=.9, labelcex = 1,  start= 0 )
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "Points per chore",
explode = 0.5, radius=.9, labelcex = 1,  start= 0 )
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "Points per chore",
explode = 0.3, radius=.9, labelcex = 1,  start= 0 )
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "Points per chore",
explode = 0.2, radius=.9, labelcex = 1,  start= 0 )
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "Points per chore",
explode = 0.2, radius=2, labelcex = 1,  start= 0 )
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "Points per chore",
explode = 0.2, radius= 0.5, labelcex = 1,  start= 0 )
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "Points per chore",
explode = 0.2, radius= 0.9, labelcex = 1,  start= 0 )
devtools::install_github("hrbrmstr/waffle")
library(waffle)
waffle(eu_data, title = "Yummy waffle pie!")
library(waffle)
library
library(ggplot2)
install.packages("munsell")
install.packages("munsell")
install.packages("munsell")
install.packages("munsell")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(waffle)
waffle(eu_data, title = "Yummy waffle pie!")
eu_data
an_data = data %>% filter(Name == 'Antonio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = sum(Points))
an_data
an_data = data %>% filter(Name == 'Antonio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = sum(Points))
data
an_data = data %>% filter(Name == 'Antonio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = sum(Points))
library(googlesheets)
suppressMessages(library(dplyr))
eu_data = data %>% filter(Name == 'Eusebio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = sum(Points))
an_data = data %>% filter(Name == 'Antonio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = sum(Points))
an_data
waffle(eu_data, title = "Yummy waffle pie!")
waffle(an_data, title = "Yummy waffle pie!")
waffle(eu _data, title = "Yummy waffle pie!")
waffle(eu_data, title = "Yummy waffle pie!")
waffle(eu_data, title = "Yummy waffle pie!")
waffle(an_data, title = "Yummy waffle pie!")
waffle(an_data, title = "Yummy waffle pie!")
waffle(eu_data, title = "Yummy waffle pie!")
an_data
eu_data = data %>% filter(Name == 'Eusebio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = count(Points))
an_data = data %>% filter(Name == 'Antonio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = count(Points))
eu_data
eu_data = data %>% filter(Name == 'Eusebio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = count_(Points))
an_data = data %>% filter(Name == 'Antonio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = n(Points))
eu_data = data %>% filter(Name == 'Eusebio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = n())
an_data = data %>% filter(Name == 'Antonio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = n())
waffle(an_data, title = "Yummy waffle pie!")
waffle(eu_data, title = "Yummy waffle pie!")
an_data
eu_data
an_data = data %>% filter(Name == 'Antonio') %>% select_('Chores', 'Points')%>%group_by(Chores)%>%summarise(t_points = n())
library(ggplot2)
bp= ggplot(eu_data, aes(x="", y=t_points, fill=Chores)) + geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
bp + scale_fill_brewer(palette="Blues")+
theme_minimal()
library(scales)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
bp + scale_fill_brewer("Blues") +   blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(y = t_points/ nrow(eu_data) + c(0, cumsum(t_points)[-length(t_points)]),
label = (t_points)), size=5
)
library(plotrix)
pie3D(eu_data$t_points, labels = eu_data$Chores, main = "Points per chore",
explode = 0.2, radius= 0.9, labelcex = 1,  start= 0 )
library(shiny); runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
runApp('Google Drive/01_GitHub/chores_calculations/chores_app.R')
